{"ast":null,"code":"import { createOrder } from \"./FetchApi\";\nexport const fetchData = async (cartListProduct, dispatch) => {\n  dispatch({\n    type: \"loading\",\n    payload: true\n  });\n\n  try {\n    let responseData = await cartListProduct();\n\n    if (responseData && responseData.Products) {\n      setTimeout(function () {\n        dispatch({\n          type: \"cartProduct\",\n          payload: responseData.Products\n        });\n        dispatch({\n          type: \"loading\",\n          payload: false\n        });\n      }, 1000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const fetchbrainTree = async (getBrainTreeToken, setState) => {\n  try {\n    let responseData = await getBrainTreeToken();\n\n    if (responseData && responseData) {\n      setState({\n        clientToken: responseData.clientToken,\n        success: responseData.success\n      });\n      console.log(responseData);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const pay = async (data, dispatch, state, setState, getPaymentProcess, totalCost, history) => {\n  console.log(state);\n\n  if (!state.address) {\n    setState({ ...state,\n      error: \"Please provide your address\"\n    });\n  } else if (!state.phone) {\n    setState({ ...state,\n      error: \"Please provide your phone number\"\n    });\n  } else {\n    let nonce;\n    state.instance.requestPaymentMethod().then(data => {\n      dispatch({\n        type: \"loading\",\n        payload: true\n      });\n      nonce = data.nonce;\n      let paymentData = {\n        amountTotal: totalCost(),\n        paymentMethod: nonce\n      };\n      getPaymentProcess(paymentData).then(async res => {\n        if (res) {\n          let orderData = {\n            allProduct: JSON.parse(localStorage.getItem(\"cart\")),\n            user: JSON.parse(localStorage.getItem(\"jwt\")).user._id,\n            amount: res.transaction.amount,\n            transactionId: res.transaction.id,\n            address: state.address,\n            phone: state.phone\n          };\n\n          try {\n            let resposeData = await createOrder(orderData);\n\n            if (resposeData.success) {\n              localStorage.setItem(\"cart\", JSON.stringify([]));\n              dispatch({\n                type: \"cartProduct\",\n                payload: null\n              });\n              dispatch({\n                type: \"cartTotalCost\",\n                payload: null\n              });\n              dispatch({\n                type: \"orderSuccess\",\n                payload: true\n              });\n              setState({\n                clientToken: \"\",\n                instance: {}\n              });\n              dispatch({\n                type: \"loading\",\n                payload: false\n              });\n              return history.push(\"/\");\n            } else if (resposeData.error) {\n              console.log(resposeData.error);\n            }\n          } catch (error) {\n            console.log(error);\n          }\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(error => {\n      console.log(error);\n      setState({ ...state,\n        error: error.message\n      });\n    });\n  }\n};","map":{"version":3,"names":["createOrder","fetchData","cartListProduct","dispatch","type","payload","responseData","Products","setTimeout","error","console","log","fetchbrainTree","getBrainTreeToken","setState","clientToken","success","pay","data","state","getPaymentProcess","totalCost","history","address","phone","nonce","instance","requestPaymentMethod","then","paymentData","amountTotal","paymentMethod","res","orderData","allProduct","JSON","parse","localStorage","getItem","user","_id","amount","transaction","transactionId","id","resposeData","setItem","stringify","push","catch","err","message"],"sources":["C:/Users/Lalitesh Nohwar/Desktop/Apni Dukaan/client/src/components/shop/order/Action.js"],"sourcesContent":["import { createOrder } from \"./FetchApi\";\r\n\r\nexport const fetchData = async (cartListProduct, dispatch) => {\r\n  dispatch({ type: \"loading\", payload: true });\r\n  try {\r\n    let responseData = await cartListProduct();\r\n    if (responseData && responseData.Products) {\r\n      setTimeout(function () {\r\n        dispatch({ type: \"cartProduct\", payload: responseData.Products });\r\n        dispatch({ type: \"loading\", payload: false });\r\n      }, 1000);\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchbrainTree = async (getBrainTreeToken, setState) => {\r\n  try {\r\n    let responseData = await getBrainTreeToken();\r\n    if (responseData && responseData) {\r\n      setState({\r\n        clientToken: responseData.clientToken,\r\n        success: responseData.success,\r\n      });\r\n      console.log(responseData);\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const pay = async (\r\n  data,\r\n  dispatch,\r\n  state,\r\n  setState,\r\n  getPaymentProcess,\r\n  totalCost,\r\n  history\r\n) => {\r\n  console.log(state);\r\n  if (!state.address) {\r\n    setState({ ...state, error: \"Please provide your address\" });\r\n  } else if (!state.phone) {\r\n    setState({ ...state, error: \"Please provide your phone number\" });\r\n  } else {\r\n    let nonce;\r\n    state.instance\r\n      .requestPaymentMethod()\r\n      .then((data) => {\r\n        dispatch({ type: \"loading\", payload: true });\r\n        nonce = data.nonce;\r\n        let paymentData = {\r\n          amountTotal: totalCost(),\r\n          paymentMethod: nonce,\r\n        };\r\n        getPaymentProcess(paymentData)\r\n          .then(async (res) => {\r\n            if (res) {\r\n              let orderData = {\r\n                allProduct: JSON.parse(localStorage.getItem(\"cart\")),\r\n                user: JSON.parse(localStorage.getItem(\"jwt\")).user._id,\r\n                amount: res.transaction.amount,\r\n                transactionId: res.transaction.id,\r\n                address: state.address,\r\n                phone: state.phone,\r\n              };\r\n              try {\r\n                let resposeData = await createOrder(orderData);\r\n                if (resposeData.success) {\r\n                  localStorage.setItem(\"cart\", JSON.stringify([]));\r\n                  dispatch({ type: \"cartProduct\", payload: null });\r\n                  dispatch({ type: \"cartTotalCost\", payload: null });\r\n                  dispatch({ type: \"orderSuccess\", payload: true });\r\n                  setState({ clientToken: \"\", instance: {} });\r\n                  dispatch({ type: \"loading\", payload: false });\r\n                  return history.push(\"/\");\r\n                } else if (resposeData.error) {\r\n                  console.log(resposeData.error);\r\n                }\r\n              } catch (error) {\r\n                console.log(error);\r\n              }\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setState({ ...state, error: error.message });\r\n      });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}