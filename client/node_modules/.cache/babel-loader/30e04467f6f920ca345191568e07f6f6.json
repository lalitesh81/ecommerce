{"ast":null,"code":"import { DashboardData, postUploadImage, getSliderImages, postDeleteImage } from \"./FetchApi\";\nimport { getAllOrder } from \"../orders/FetchApi.js\";\nexport const GetAllData = async dispatch => {\n  let responseData = await DashboardData();\n\n  if (responseData) {\n    dispatch({\n      type: \"totalData\",\n      payload: responseData\n    });\n  }\n};\nexport const todayAllOrders = async dispatch => {\n  let responseData = await getAllOrder();\n\n  if (responseData) {\n    dispatch({\n      type: \"totalOrders\",\n      payload: responseData\n    });\n  }\n};\nexport const sliderImages = async dispatch => {\n  try {\n    let responseData = await getSliderImages();\n\n    if (responseData && responseData.Images) {\n      dispatch({\n        type: \"sliderImages\",\n        payload: responseData.Images\n      });\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deleteImage = async (id, dispatch) => {\n  dispatch({\n    type: \"imageUpload\",\n    payload: true\n  });\n\n  try {\n    let responseData = await postDeleteImage(id);\n\n    if (responseData && responseData.success) {\n      setTimeout(function () {\n        sliderImages(dispatch);\n        dispatch({\n          type: \"imageUpload\",\n          payload: false\n        });\n      }, 1000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const uploadImage = async (image, dispatch) => {\n  dispatch({\n    type: \"imageUpload\",\n    payload: true\n  });\n  let formData = new FormData();\n  formData.append(\"image\", image);\n  console.log(formData.get(\"image\"));\n\n  try {\n    let responseData = await postUploadImage(formData);\n\n    if (responseData && responseData.success) {\n      setTimeout(function () {\n        dispatch({\n          type: \"imageUpload\",\n          payload: false\n        });\n        sliderImages(dispatch);\n      }, 1000);\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["DashboardData","postUploadImage","getSliderImages","postDeleteImage","getAllOrder","GetAllData","dispatch","responseData","type","payload","todayAllOrders","sliderImages","Images","error","console","log","deleteImage","id","success","setTimeout","uploadImage","image","formData","FormData","append","get"],"sources":["C:/Users/Lalitesh Nohwar/Desktop/AviStore/client/src/components/admin/dashboardAdmin/Action.js"],"sourcesContent":["import {\r\n  DashboardData,\r\n  postUploadImage,\r\n  getSliderImages,\r\n  postDeleteImage,\r\n} from \"./FetchApi\";\r\nimport { getAllOrder } from \"../orders/FetchApi.js\";\r\n\r\nexport const GetAllData = async (dispatch) => {\r\n  let responseData = await DashboardData();\r\n  if (responseData) {\r\n    dispatch({ type: \"totalData\", payload: responseData });\r\n  }\r\n};\r\n\r\nexport const todayAllOrders = async (dispatch) => {\r\n  let responseData = await getAllOrder();\r\n  if (responseData) {\r\n    dispatch({ type: \"totalOrders\", payload: responseData });\r\n  }\r\n};\r\n\r\nexport const sliderImages = async (dispatch) => {\r\n  try {\r\n    let responseData = await getSliderImages();\r\n    if (responseData && responseData.Images) {\r\n      dispatch({ type: \"sliderImages\", payload: responseData.Images });\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deleteImage = async (id, dispatch) => {\r\n  dispatch({ type: \"imageUpload\", payload: true });\r\n  try {\r\n    let responseData = await postDeleteImage(id);\r\n    if (responseData && responseData.success) {\r\n      setTimeout(function () {\r\n        sliderImages(dispatch);\r\n        dispatch({ type: \"imageUpload\", payload: false });\r\n      }, 1000);\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const uploadImage = async (image, dispatch) => {\r\n  dispatch({ type: \"imageUpload\", payload: true });\r\n  let formData = new FormData();\r\n  formData.append(\"image\", image);\r\n  console.log(formData.get(\"image\"));\r\n  try {\r\n    let responseData = await postUploadImage(formData);\r\n    if (responseData && responseData.success) {\r\n      setTimeout(function () {\r\n        dispatch({ type: \"imageUpload\", payload: false });\r\n        sliderImages(dispatch);\r\n      }, 1000);\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,SACEA,aADF,EAEEC,eAFF,EAGEC,eAHF,EAIEC,eAJF,QAKO,YALP;AAMA,SAASC,WAAT,QAA4B,uBAA5B;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB;EAC5C,IAAIC,YAAY,GAAG,MAAMP,aAAa,EAAtC;;EACA,IAAIO,YAAJ,EAAkB;IAChBD,QAAQ,CAAC;MAAEE,IAAI,EAAE,WAAR;MAAqBC,OAAO,EAAEF;IAA9B,CAAD,CAAR;EACD;AACF,CALM;AAOP,OAAO,MAAMG,cAAc,GAAG,MAAOJ,QAAP,IAAoB;EAChD,IAAIC,YAAY,GAAG,MAAMH,WAAW,EAApC;;EACA,IAAIG,YAAJ,EAAkB;IAChBD,QAAQ,CAAC;MAAEE,IAAI,EAAE,aAAR;MAAuBC,OAAO,EAAEF;IAAhC,CAAD,CAAR;EACD;AACF,CALM;AAOP,OAAO,MAAMI,YAAY,GAAG,MAAOL,QAAP,IAAoB;EAC9C,IAAI;IACF,IAAIC,YAAY,GAAG,MAAML,eAAe,EAAxC;;IACA,IAAIK,YAAY,IAAIA,YAAY,CAACK,MAAjC,EAAyC;MACvCN,QAAQ,CAAC;QAAEE,IAAI,EAAE,cAAR;QAAwBC,OAAO,EAAEF,YAAY,CAACK;MAA9C,CAAD,CAAR;IACD;EACF,CALD,CAKE,OAAOC,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CATM;AAWP,OAAO,MAAMG,WAAW,GAAG,OAAOC,EAAP,EAAWX,QAAX,KAAwB;EACjDA,QAAQ,CAAC;IAAEE,IAAI,EAAE,aAAR;IAAuBC,OAAO,EAAE;EAAhC,CAAD,CAAR;;EACA,IAAI;IACF,IAAIF,YAAY,GAAG,MAAMJ,eAAe,CAACc,EAAD,CAAxC;;IACA,IAAIV,YAAY,IAAIA,YAAY,CAACW,OAAjC,EAA0C;MACxCC,UAAU,CAAC,YAAY;QACrBR,YAAY,CAACL,QAAD,CAAZ;QACAA,QAAQ,CAAC;UAAEE,IAAI,EAAE,aAAR;UAAuBC,OAAO,EAAE;QAAhC,CAAD,CAAR;MACD,CAHS,EAGP,IAHO,CAAV;IAID;EACF,CARD,CAQE,OAAOI,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAbM;AAeP,OAAO,MAAMO,WAAW,GAAG,OAAOC,KAAP,EAAcf,QAAd,KAA2B;EACpDA,QAAQ,CAAC;IAAEE,IAAI,EAAE,aAAR;IAAuBC,OAAO,EAAE;EAAhC,CAAD,CAAR;EACA,IAAIa,QAAQ,GAAG,IAAIC,QAAJ,EAAf;EACAD,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBH,KAAzB;EACAP,OAAO,CAACC,GAAR,CAAYO,QAAQ,CAACG,GAAT,CAAa,OAAb,CAAZ;;EACA,IAAI;IACF,IAAIlB,YAAY,GAAG,MAAMN,eAAe,CAACqB,QAAD,CAAxC;;IACA,IAAIf,YAAY,IAAIA,YAAY,CAACW,OAAjC,EAA0C;MACxCC,UAAU,CAAC,YAAY;QACrBb,QAAQ,CAAC;UAAEE,IAAI,EAAE,aAAR;UAAuBC,OAAO,EAAE;QAAhC,CAAD,CAAR;QACAE,YAAY,CAACL,QAAD,CAAZ;MACD,CAHS,EAGP,IAHO,CAAV;IAID;EACF,CARD,CAQE,OAAOO,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAhBM"},"metadata":{},"sourceType":"module"}